{"version":3,"sources":["utils/API.js","components/SearchResults/index.jsx","pages/Search.jsx","App.js","index.js"],"names":["axios","get","SearchResults","employees","console","log","data","columns","label","field","sort","width","rows","map","row","img","src","alt","name","first","last","email","dob","location","startDate","hover","searchTop","searchBottom","entriesOptions","entries","pagesAmount","fullPagination","striped","searchLabel","theadColor","theadTextWhite","responsive","Search","state","results","API","then","res","employee","picture","thumbnail","registered","date","split","age","country","setState","catch","error","this","className","Component","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"wPAEe,EACC,WACZ,OAAOA,IAAMC,IAAN,2C,gBCoEIC,EArEO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACvBC,QAAQC,IAAI,iCAAkCF,GAC9C,IAAMG,EAAO,CACXC,QAAS,CACP,CACEC,MAAO,QACPC,MAAO,MACPC,KAAM,WACNC,MAAO,KAET,CACEH,MAAO,OACPC,MAAO,OACPE,MAAO,KAET,CACEH,MAAO,mBACPC,MAAO,YACPE,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPE,MAAO,KAET,CACEH,MAAO,YACPC,MAAO,MACPE,MAAO,KAET,CACEH,MAAO,WACPC,MAAO,WACPE,MAAO,MAGXC,KAAK,YACAT,EAAUU,KAAI,SAACC,GAChB,MAAO,CACLC,IAAK,yBAAKC,IAAKF,EAAIC,IAAKE,IAAG,UAAKH,EAAII,KAAKC,MAAd,YAAuBL,EAAII,KAAKE,KAAhC,gBAC3BF,KAAMJ,EAAII,KAAKC,MAAQ,IAAML,EAAII,KAAKE,KACtCC,MAAOP,EAAIO,MACXC,IAAKR,EAAIQ,IACTC,SAAUT,EAAIS,SACdC,UAAWV,EAAIU,gBAMvB,OACE,kBAAC,IAAD,CACEC,OAAK,EACLC,WAAS,EACTC,cAAc,EACdC,eAAgB,CAAC,GAAI,GAAI,GAAI,KAC7BC,QAAS,GACTC,YAAa,EACbC,gBAAc,EACdC,SAAO,EACPC,YAAa,mBACbC,WAAY,OACZC,gBAAc,EACdC,YAAU,EACV9B,KAAMA,KCGG+B,G,mNA/DbC,MAAQ,CACNnC,UAAW,GACXoC,QAAS,I,kEAGU,IAAD,OAClBC,IACGC,MAAK,SAACC,GACLtC,QAAQC,IAAI,qBAAsBqC,EAAIpC,KAAKiC,SAC3C,IAAII,EAAWD,EAAIpC,KAAKiC,QAAQ1B,KAAI,SAAC8B,GACnC,MAAO,CACL5B,IAAK4B,EAASC,QAAQC,UACtB3B,KAAMyB,EAASzB,KACfG,MAAOsB,EAAStB,MAChBG,UAAWmB,EAASG,WAAWC,KAAKC,MAAM,KAAK,GAAK,KAAOL,EAASG,WAAWG,IAAM,OACrF1B,SAAUoB,EAASpB,SAAS2B,QAC5B5B,IAAKqB,EAASrB,IAAIyB,KAAKC,MAAM,KAAK,GAAK,KAAOL,EAASrB,IAAI2B,IAAM,WAGrE7C,QAAQC,IAAI,aAAcsC,GAC1B,EAAKQ,SAAS,CACZZ,QAASG,EAAIpC,KAAKiC,QAClBpC,UAAWwC,OAGdS,MAAMhD,QAAQiD,S,+BAUjB,OAFAjD,QAAQC,IAAI,UAAWiD,KAAKhB,OAG1B,yBAAKiB,UAAU,mBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,yCAAd,wBAGJ,wBAAIA,UAAU,SACd,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,uBAAGA,UAAU,oBAAb,4MAGE,kDAEF,uBAAGA,UAAU,0BAAb,mSAKA,kBAAC,EAAD,CAAepD,UAAWmD,KAAKhB,MAAMnC,mB,GAxD5BqD,cCQNC,MAVf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWtB,O,4BCAnCuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8514f6e2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getEmployees: () => {\n    return axios.get(`https://randomuser.me/api/?results=500`);\n  },\n};\n","import React from \"react\";\nimport { MDBDataTableV5 } from \"mdbreact\";\n\nconst SearchResults = ({ employees }) => {\n  console.log(\"(SearchResults) { employees } \", employees);\n  const data = {\n    columns: [\n      {\n        label: \"IMAGE\",\n        field: \"img\",\n        sort: \"disabled\",\n        width: 150,\n      },\n      {\n        label: \"NAME\",\n        field: \"name\",\n        width: 270,\n      },\n      {\n        label: \"START DATE [JOB]\",\n        field: \"startDate\",\n        width: 150,\n      },\n      {\n        label: \"EMAIL\",\n        field: \"email\",\n        width: 200,\n      },\n      {\n        label: \"DOB [AGE]\",\n        field: \"dob\",\n        width: 250,\n      },\n      {\n        label: \"LOCATION\",\n        field: \"location\",\n        width: 150,\n      },\n    ],\n    rows: [\n      ...employees.map((row) => {\n        return {\n          img: <img src={row.img} alt={`${row.name.first} ${row.name.last} thumbnail`} />,\n          name: row.name.first + \" \" + row.name.last,\n          email: row.email,\n          dob: row.dob,\n          location: row.location,\n          startDate: row.startDate,\n        };\n      }),\n    ],\n  };\n\n  return (\n    <MDBDataTableV5\n      hover\n      searchTop\n      searchBottom={false}\n      entriesOptions={[10, 25, 50, 100]}\n      entries={10}\n      pagesAmount={4}\n      fullPagination\n      striped\n      searchLabel={\"Search Directory\"}\n      theadColor={\"blue\"}\n      theadTextWhite\n      responsive\n      data={data}\n    />\n  );\n};\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport SearchResults from \"../components/SearchResults\";\n\nimport \"./style.css\";\n\nclass Search extends Component {\n  state = {\n    employees: [],\n    results: [],\n  };\n\n  componentDidMount() {\n    API.getEmployees()\n      .then((res) => {\n        console.log(\"res.data.results: \", res.data.results);\n        let employee = res.data.results.map((employee) => {\n          return {\n            img: employee.picture.thumbnail,\n            name: employee.name,\n            email: employee.email,\n            startDate: employee.registered.date.split(\"T\")[0] + \" [\" + employee.registered.age + \"yrs]\",\n            location: employee.location.country,\n            dob: employee.dob.date.split(\"T\")[0] + \" [\" + employee.dob.age + \"yrs]\",\n          };\n        });\n        console.log(\"employee: \", employee);\n        this.setState({\n          results: res.data.results,\n          employees: employee,\n        });\n      })\n      .catch(console.error);\n  }\n\n  // handleInputChange = (event) => {\n  //   this.setState({ search: event.target.value });\n  // };\n\n  render() {\n    console.log(\"state: \", this.state);\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row bdr\">\n          <div className=\"col\">\n            <h1 className=\"mt-4 display-4 text-center text-white\">Employee Directory</h1>\n          </div>\n        </div>\n        <hr className=\"my-4\"></hr>\n        <div className=\"row\">\n          <div className=\"col\">\n            <p className=\"lead text-center\">\n              This directory utilizes the randomgenerator api which will call each time the page is loaded. You can then\n              search through the 'employees' that were called to see if you can match any data in the table.\n              <em> Happy searching!</em>\n            </p>\n            <p className=\"text-center text-muted\">\n              You can also sort the table by ascending and descending order by clicking the column headers ~ i.e. clicking on\n              \"Name\" will sort alphabetically, \"Age\" by how old, \"Location\" alphabetically by the country and so on. You can\n              also change the number of rows per page from 10, 25, 50, or 100.\n            </p>\n            <SearchResults employees={this.state.employees} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" component={Search} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}